#version 450

#define WORKGROUP_SIZE 32
#extension GL_ARB_gpu_shader_int64 : enable
#extension GL_EXT_shader_atomic_int64 : enable
#extension GL_EXT_shader_image_int64 : enable
layout(local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

struct Vertex {
	vec3 pos;
	vec3 normal;
	vec2 uv;
	vec4 color;
	vec4 joint0;
	vec4 weight0;
	vec4 tangent;
}

layout(std430, set = 0, binding = 0) buffer readonly VerticesIn {
   Vertex inVertices[ ];
};

layout(std430, set = 0, binding = 1) buffer readonly TrianglesIn {
   uint inTriangles[ ];
};

layout(set = 0, binding = 2) buffer readonly ModelMatIn{
	mat4 inModelMats[];
};

layout(set = 0, binding = 3) buffer readonly ObjectIdIn{
	uint objectIds[];
};

layout(set = 0, binding = 4) uniform UBO{
	uint num_triangles;
}ubo;

layout(set = 0, binding = 5) uniform UBO{
	uint num_triangles;
}ubo;

layout(set = 0, binding = 6, r64ui) uniform image2D swrImage;



void main()
{
	uint index = gl_GlobalInvocationID.x;
    
    if(index >= ubo.num_triangles) return;


}